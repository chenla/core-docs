#   -*- mode: org; fill-column: 60 -*-

#+TITLE: Issues Handbook
#+STARTUP: showall
#+TOC: headlines 4
#+PROPERTY: filename
:PROPERTIES:
:CUSTOM_ID: 
:Name:      /home/deerpig/proj/chenla/docs/hb-issues.org
:Created:   2017-09-14T16:31@Prek Leap (11.642600N-104.919210W)
:ID:        5f4079fe-2ace-4fc5-ab6c-84627de0b739
:VER:       558653525.819698137
:GEO:       48P-491193-1287029-15
:BXID:      proj:LWO2-8266
:Class:     docs
:Type:      work
:Status:    wip
:Licence:   MIT/CC BY-SA 4.0
:END:

[[https://img.shields.io/badge/made%20by-Chenla%20Institute-999999.svg?style=flat-square]] 
[[https://img.shields.io/badge/class-docs-56B4E9.svg?style=flat-square]]
[[https://img.shields.io/badge/type-handbook-0072B2.svg?style=flat-square]]
[[https://img.shields.io/badge/status-wip-D55E00.svg?style=flat-square]]
[[https://img.shields.io/badge/licence-MIT%2FCC%20BY--SA%204.0-000000.svg?style=flat-square]]


* Introduction

We now use GitLab because of its integration with workflow.
Feature branches can be linked to issues, and issued managed
with pull/merge requests.  Merge requests are then tied to
triggering automated builds, tests and deployment.

** Issues and Branches

Every branch should correspond to an issue in the
project/repo.

Branch names should always start with the issue number.

#+begin_example
#26-name-of-issue
#+end_example

* Core Issue Labels/Tags Set

GitLab uses tags to allow users to sort and link to issues.

We have developed a standard set of labels that can be used
across all projects and groups.  Users and Teams are free to
add their own labels.

** Status Labels

- deferred :: The issue has been discussed, but it will not
     be acted on at this time.  A reason should be given for
     the deferral, and if the issue will be deferred
     indefinitely, the deferred status should be maintained
     long enough to get feedback from all stakeholders
     before closing the issue.

- discussion :: The issue is being discussed, all parties who
     are impacted by the issue are being brought into the
     discussion and possible solutions considered.

- need-eg :: /Need example/ ("eg" is derived from "e.g.")
  Useful if the developers can't reproduce a bug and need
  instructions how to do this or an example document showing the
  bug. [1]

- in-progress :: Someone has been assigned the issue, and it
     is actively being dealt with.

- testing :: A resolution has been completed and is either
     being tested before being deployed or is open for
     comment from stakeholders before deploying the
     resolution and closing the issue.

- done-cbb :: /Done, could be better/ It is kind of
              resolved, but the solution isn't very nice or
              efficient.

- resolved ::  The issue has been resolved or completed. But
     please do not do this lightly.  Ensure that you have
     brought everyone into the discussion, gone through all
     of the steps of resolution, gotten feedback and then
     provide an explicit explanation of why the issue is
     being closed.  Do not close something until it has been
     tested and merged.

- in-review :: Issue under review and testing.

- ready-to-merge :: For final review before merging.

- build  :: issues related to builds.

- deploy :: issues related to deployment.

** Priority Labels

- critical :: This is a priority #A issue that needs that
     *MUST* be addressed /immediately/.  This is a "get out
     of bed!  The house is on fire!" kind of situation.  If
     this was set by someone other than a project lead, or
     someone higher, it needs to be reviewed immediately and
     action taken.

- urgent :: This is a priority #B issue that may not be an
     immediate emergancy, but *SHOULD* be reviewed and
     resolved as soon as possible.

- bug :: A non-critical or urgent bug, that should be fixed
     in the next release.

- feature :: For new features that has been accepted
     for inclusion in the project, which needs to be added
     to the /backlog/.

- todo   :: For tasks that are not directly related to code
            or texts.

- wish ::  This is a feature /request/ from a user or
     someone on the project, that needs to be discussed.  If
     accepted it will then be upgraded to a /feature/.

- moonshot :: For big, bold, brash ideas and proposals.  To
               "Some day, Alice. Boom! To the moon!"


** Type or Catagory Labels


 - documentation :: Documentation issues.
 - milestone     :: Project milestones.
 - roadmap       :: Institute, Group or Project Roadmap issues.
 - backend       :: Issues related to back end server code
                    and system administration.
 - frontend      :: Issues related to User Interface.
 - database      :: Database related issues, including SQL,
                    Graph and K-V Stores

